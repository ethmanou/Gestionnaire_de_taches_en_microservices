<!-- TaskList.razor -->
@page "/task_visual"
@inject ILogger<Register> Logger
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider authStateProvider
@using Front.Entities
@inject TaskService TaskService

<EditForm Model="@task" OnValidSubmit="HandleCreate">
    <InputText @bind-Value="task.Text" />
    <InputCheckbox @bind-Value="task.IsDone" />
    <button type="submit">Create</button>
</EditForm>

<h3>Liste des tâches</h3>

<ul>
    @if (tasks != null)
    {
        @foreach (var task in tasks)
        {
            <li>@task?.Id</li>
        }
    }
    else
    {
        <p>Aucune tâche disponible pour le moment.</p>
    }
</ul>



@code {
    private List<TaskModel> tasks;
    private TaskCreate task = new TaskCreate();

    

     private async void HandleCreate()
    {
        var user = await TaskService.CreateTask(task.Text , task.IsDone);
        if (user != null)
        {
            //var userClaim = await ((CustomAuthenticationStateProvider)authStateProvider).MarkUserAsAuthenticated(user);

            NavigationManager.NavigateTo("/");
        }
        else
        {
            NavigationManager.NavigateTo("/Error");
        }
    }

    public class TaskCreate
    {
        public string Text { get; set; }
        public bool IsDone { get; set; }
    }

}


